name: basket-api

on:
  push:
    branches:
    - main
    paths:
    - src/BuildingBlocks/**
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml
    - pulumi/basket-api/**
env:
  SERVICE: basket-api
  IMAGE: basket.api
  DOTNET_VERSION: 5.0.x

jobs:
  PublishImage:
    name: Build & Push Container Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # - name: Setup dotnet
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: ${{ env.DOTNET_VERSION }}
    # - name: Build and run unit tests
    #   run: |
    #     cd src
    #     dotnet restore "eShopOnContainers-ServicesAndWebApps.sln"
    #     cd Services/Basket/Basket.API
    #     dotnet build --no-restore
    #     cd -
    #     cd Services/Basket/Basket.UnitTests
    #     dotnet build --no-restore
    #     dotnet test --no-build -v=normal
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY_ENDPOINT }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Compose build ${{ env.SERVICE }}
      run: sudo -E docker-compose build ${{ env.SERVICE }}
      working-directory: ./src
      shell: bash
      env:
        TAG: build.${{ github.run_number }}
        REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
    - name: Compose push ${{ env.SERVICE }}
      run: sudo -E docker-compose push ${{ env.SERVICE }}
      working-directory: ./src
      shell: bash
      env:
        TAG: build.${{ github.run_number }}
        REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
  deploy:
    name: Deploy
    needs: PublishImage
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v1.0.1
    - name: Npm Install
      run: |
        cd prometheus-operator-crds
        npm install
        cd ../${{ env.SERVICE }}
        npm install
      working-directory: ./pulumi
    - name: Pulumi up
      run: |
        echo "${{secrets.KUBECONFIG}}" > .kubeconfig
        pulumi stack select sandbox
        pulumi up --yes --skip-preview --suppress-permalink="true"
      working-directory: ./pulumi/${{ env.SERVICE }}
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        KUBECONFIG: .kubeconfig
        IMAGE_VERSION: build.${{ github.run_number }}
